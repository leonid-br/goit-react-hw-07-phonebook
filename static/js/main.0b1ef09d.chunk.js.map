{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Heading/Heading.module.css","components/Notification/Notification.module.css","service/api.js","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Heading/Heading.js","components/Notification/Notification.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","url","addNewContact","a","data","fetch","method","headers","body","JSON","stringify","response","json","getAllContacts","result","deleteContact","id","findContact","createAction","getContacts","createAsyncThunk","contact","addContact","deleteContactById","res","items","createReducer","fulfilled","_","payload","state","action","filter","meta","arg","isLoadingGet","pending","rejected","isLoadinAdd","isLoadingDelete","combineReducers","store","configureStore","reducer","contacts","contactReducer","devTools","process","getItems","loadingGet","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handelChange","e","target","value","onSubmit","preventDefault","normalizeName","toLowerCase","find","changeEnterName","alert","toUpperCase","shortid","generate","className","style","form","lable","type","onChange","pattern","title","required","input","button","Filter","label","placeholder","ContactItem","item","onClick","porpTypes","PropTypes","arrayOf","object","string","ContactList","normalizedFilter","findContacts","includes","length","getUserContacts","list","map","el","Container","children","container","Heading","Notification","notification","App","isLoading","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,OAAS,8B,mBCAjGD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,mBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,4KCD3BC,EAAM,iCAENC,EAAa,uCAAG,0CAAAC,EAAA,6DAAOC,EAAP,+BAAc,GAAd,SACKC,MAAMJ,EAAK,CAC9BK,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KANP,cACZO,EADY,gBAQLA,EAASC,OARJ,mFAAH,qDAWbC,EAAc,uCAAG,8BAAAV,EAAA,sEACIE,MAAMJ,GADV,cACbU,EADa,gBAEEA,EAASC,OAFX,cAEbE,EAFa,yBAIZA,GAJY,2CAAH,qDAOdC,EAAa,uCAAG,WAAMC,GAAN,iBAAAb,EAAA,sEACKE,MAAM,GAAD,OAAIJ,EAAJ,YAAWe,GAAM,CACzCV,OAAQ,WAFM,cACZK,EADY,gBAIGA,EAASC,OAJZ,cAIZE,EAJY,yBAMXA,GANW,2CAAH,sDCJNG,EAAcC,YAAa,yBAE3BC,EAAcC,YACvB,wBADuC,sBAEvC,4BAAAjB,EAAA,sEAC0BU,IAD1B,cACUQ,EADV,yBAEWA,GAFX,4CAMSC,EAAaF,YACtB,uBADsC,uCAEtC,WAAMC,GAAN,SAAAlB,EAAA,sEAAuBD,EAAcmB,GAArC,mFAFsC,uDAK7BE,EAAoBH,YAC7B,0BAD6C,uCAE7C,WAAMJ,GAAN,eAAAb,EAAA,sEACsBY,EAAcC,GADpC,cACUQ,EADV,yBAEWA,GAFX,2CAF6C,uDCvB3CC,EAAQC,YAAc,IAAD,mBACtBP,EAAYQ,WAAY,SAACC,EAAD,OAAMC,EAAN,EAAMA,QAAN,mBAAwBA,MAD1B,cAEtBP,EAAWK,WAAY,SAACG,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAFpC,cAGtBN,EAAkBI,WAAY,SAACG,EAAOC,GAAR,mBACxBD,EAAME,QAAO,qBAAGhB,KAAgBe,EAAOE,KAAKC,WAJ5B,IAQrBF,EAASN,YAAc,GAAD,eACvBT,GAAc,SAACW,EAAD,YAAMC,YAGnBM,EAAeT,aAAc,GAAD,mBAC7BP,EAAYiB,SAAU,kBAAM,KADC,cAE7BjB,EAAYQ,WAAY,kBAAM,KAFD,cAG7BR,EAAYkB,UAAW,kBAAM,KAHA,IAM5BC,EAAcZ,aAAc,GAAD,mBAC5BJ,EAAWc,SAAU,kBAAM,KADC,cAE5Bd,EAAWK,WAAY,kBAAM,KAFD,cAG5BL,EAAWe,UAAW,kBAAM,KAHA,IAM3BE,EAAkBb,aAAc,GAAD,mBAChCH,EAAkBa,SAAU,kBAAM,KADF,cAEhCb,EAAkBI,WAAY,kBAAM,KAFJ,cAGhCJ,EAAkBc,UAAW,kBAAM,KAHH,IAMtBG,cAAgB,CAC3Bf,QACAO,SACAG,eACAG,cACAC,oBCjCWE,EAPDC,YAAe,CACzBC,QAAS,CACLC,SAAUC,GAEdC,UAAUC,I,yCCPDC,EAAW,SAAAlB,GAAK,OAAIA,EAAMc,SAASnB,OACnCN,EAAc,SAAAW,GAAK,OAAIA,EAAMc,UAC7BK,EAAa,SAAAnB,GAAK,OAAIA,EAAMc,SAAST,c,OC2FnCe,EArFK,WAChB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAWC,cACXb,EAAWc,YAAYV,GAEvBW,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAED,SAATV,GACAC,EAAQS,GAEC,WAATV,GACAG,EAAUO,IA6BlB,OACI,uBAAMC,SAlBW,SAAAH,GAGjB,GAFAA,EAAEI,iBATkB,SAAAZ,GACpB,IAAMa,EAAgBb,EAAKc,cAE3B,OAAOtB,EAASuB,MACZ,gBAAGf,EAAH,EAAGA,KAAH,OAAca,IAAkBb,EAAKc,iBAOrCE,CAAgBhB,GAGhB,OAFAC,EAAQ,IACRE,EAAU,IACHc,MAAM,iBAAD,OACSjB,EAAKkB,cADd,+CAKhBd,EAASlC,EAAW,CAAE8B,OAAME,SAAQtC,GAAIuD,IAAQC,cAEhDnB,EAAQ,IACRE,EAAU,KAIoBkB,UAAWC,IAAMC,KAA/C,UACI,wBAAOF,UAAWC,IAAME,MAAxB,iBAEI,uBACIC,KAAK,OACLzB,KAAK,OACLU,MAAOV,EACP0B,SAAUnB,EACVoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,UAAWC,IAAMQ,WAIzB,wBAAOT,UAAWC,IAAME,MAAxB,mBAEI,uBACIC,KAAK,MACLzB,KAAK,SACLU,MAAOR,EACPwB,SAAUnB,EACVoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,UAAWC,IAAMQ,WAIzB,wBAAQL,KAAK,SAASJ,UAAWC,IAAMS,OAAvC,6B,iBClDGC,EAzBA,WACX,IAAMtB,EAAQJ,aAAY,SAAA5B,GAAK,OAAIA,EAAMc,SAASZ,UAC5CwB,EAAWC,cAIjB,OACI,wBAAOgB,UAAWC,IAAMW,MAAxB,kCAEI,uBACIC,YAAY,iBACZT,KAAK,OACLf,MAAOA,EACPgB,SATS,SAAAlB,GAAC,OAAIJ,EAASvC,EAAY2C,EAAEC,OAAOC,SAU5CW,UAAWC,IAAMQ,Y,iCCSlBK,EAvBK,SAAC,GAA0B,IAAxBvE,EAAuB,EAAvBA,GAAIoC,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACvBE,EAAWC,cAEjB,OACI,qBAAagB,UAAWC,IAAMc,KAA9B,UACI,+BAAOpC,IADX,IACwB,sBAAMqB,UAAWC,IAAMpB,OAAvB,SAAgCA,IACpD,wBACIuB,KAAK,SACLY,QAAS,kBAAMjC,EAASjC,EAAkBP,KAC1CyD,UAAWC,IAAMS,OAHrB,sBAFKnE,I,iBC4BjBuE,EAAYG,UAAY,CACpB9C,SAAU+C,IAAUC,QAAQD,IAAUE,QACtC7E,GAAI2E,IAAUG,OACd1C,KAAMuC,IAAUG,OAChBxC,OAAQqC,IAAUG,QAEPC,OArCK,WAChB,IAaA,EAA0BrC,YAAYvC,GAChCyB,EAdkB,SAACnB,EAAOO,GAC5B,IAAMgE,EAAmBhE,EAAOkC,cAE1B+B,EAAexE,EAAMO,QAAO,SAAAwD,GAAI,OAClCA,EAAKpC,KAAKc,cAAcgC,SAASF,MAMrC,OAH4B,IAAxBC,EAAaE,QACb9B,MAAM,cAAD,OAAe2B,EAAiB1B,gBAElC2B,EAIMG,CADjB,EAAQ3E,MAAR,EAAeO,QAGf,OACI,oBAAIyC,UAAWC,IAAM2B,KAArB,SACKzD,EAAS0D,KAAI,SAAAC,GAAE,OACZ,cAAC,EAAD,CAEInD,KAAMmD,EAAGnD,KACTE,OAAQiD,EAAGjD,OACXtC,GAAIuF,EAAGvF,IAHFuF,EAAGvF,U,oBChBbwF,GARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,qBAAKhC,UAAWC,KAAMgC,UAAtB,SAAkCD,K,oBCKvBE,GANC,SAAC,GAAD,IAAG3B,EAAH,EAAGA,MAAH,OACZ,oBAAIP,UAAWC,KAAMM,MAArB,SAA6BA,K,SCElB4B,GAJM,kBACjB,mBAAGnC,UAAWoC,gBAAd,uCCkCWC,GA1BH,WACR,IAAMtD,EAAWC,cACXb,EAAWc,YAAYV,GACvB+D,EAAYrD,YAAYT,GAM9B,OAJA+D,qBAAU,WACNxD,EAASrC,OACV,CAACqC,IAGA,cAAC,GAAD,UACKuD,EACG,4CAEA,qCACI,cAAC,GAAD,CAAS/B,MAAO,cAChB,cAAC,EAAD,IACA,cAAC,GAAD,CAASA,MAAO,aACfpC,EAASuD,QAAU,GAAK,cAAC,EAAD,IACxBvD,EAASuD,OAAS,EAAI,cAAC,GAAD,IAAkB,cAAC,GAAD,UCvB7Dc,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAU1E,MAAOA,EAAjB,SACI,cAAC,GAAD,QAGR2E,SAASC,eAAe,U,kBCZ5BtH,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.0b1ef09d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1qqPN\",\"button\":\"ContactItem_button__KKoJ6\",\"number\":\"ContactItem_number__YOxcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__Few99\",\"input\":\"Filter_input__3wcMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3b0gC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3LFjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__3LafF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3Y4Bs\"};","const url = 'http://localhost:3000/contacts';\r\n\r\nconst addNewContact = async (data = {}) => {\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n    return await response.json();\r\n};\r\n\r\nconst getAllContacts = async () => {\r\n    const response = await fetch(url);\r\n    const result = await response.json();\r\n\r\n    return result;\r\n};\r\n\r\nconst deleteContact = async id => {\r\n    const response = await fetch(`${url}/${id}`, {\r\n        method: 'DELETE',\r\n    });\r\n    const result = await response.json();\r\n\r\n    return result;\r\n};\r\n\r\nexport { deleteContact, getAllContacts, addNewContact };\r\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getAllContacts, addNewContact, deleteContact } from 'service/api';\r\n\r\n// export const addContact = createAction(\r\n//     'phonebook/AddContact',\r\n//     (name, number) => ({\r\n//         payload: {\r\n//             id: shortid.generate(),\r\n//             name,\r\n//             number,\r\n//         },\r\n//     }),\r\n// );\r\n\r\n// export const deleteContact = createAction('phonebook/DeleteContact');\r\n\r\nexport const findContact = createAction('phonebook/FindContact');\r\n\r\nexport const getContacts = createAsyncThunk(\r\n    'phonebook/getContacts',\r\n    async () => {\r\n        const contact = await getAllContacts();\r\n        return contact;\r\n    },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n    'phonebook/addContact',\r\n    async contact => await addNewContact(contact),\r\n);\r\n\r\nexport const deleteContactById = createAsyncThunk(\r\n    'phonebook/DeleteContact',\r\n    async id => {\r\n        const res = await deleteContact(id);\r\n        return res;\r\n    },\r\n);\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    addContact,\r\n    deleteContactById,\r\n    findContact,\r\n    getContacts,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n    [getContacts.fulfilled]: (_, { payload }) => [...payload],\r\n    [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n    [deleteContactById.fulfilled]: (state, action) => [\r\n        ...state.filter(({ id }) => id !== action.meta.arg),\r\n    ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [findContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoadingGet = createReducer(false, {\r\n    [getContacts.pending]: () => true,\r\n    [getContacts.fulfilled]: () => false,\r\n    [getContacts.rejected]: () => false,\r\n});\r\n\r\nconst isLoadinAdd = createReducer(false, {\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n});\r\n\r\nconst isLoadingDelete = createReducer(false, {\r\n    [deleteContactById.pending]: () => true,\r\n    [deleteContactById.fulfilled]: () => false,\r\n    [deleteContactById.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    isLoadingGet,\r\n    isLoadinAdd,\r\n    isLoadingDelete,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './phonebook-reducer';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactReducer,\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","export const getItems = state => state.contacts.items;\r\nexport const getContacts = state => state.contacts;\r\nexport const loadingGet = state => state.contacts.isLoadingGet;\r\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/phonebook-actions';\nimport style from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { getItems } from 'redux/selectors';\n\nconst ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(getItems);\n\n    const handelChange = e => {\n        const { name, value } = e.target;\n\n        if (name === 'name') {\n            setName(value);\n        }\n        if (name === 'number') {\n            setNumber(value);\n        }\n    };\n\n    const changeEnterName = name => {\n        const normalizeName = name.toLowerCase();\n\n        return contacts.find(\n            ({ name }) => normalizeName === name.toLowerCase(),\n        );\n    };\n\n    const handelSubmit = e => {\n        e.preventDefault();\n\n        if (changeEnterName(name)) {\n            setName('');\n            setNumber('');\n            return alert(\n                `This contact \"${name.toUpperCase()}\" has already been added to your Phonebook`,\n            );\n        }\n\n        dispatch(addContact({ name, number, id: shortid.generate() }));\n\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handelSubmit} className={style.form}>\n            <label className={style.lable}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handelChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    className={style.input}\n                />\n            </label>\n\n            <label className={style.lable}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handelChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    className={style.input}\n                />\n            </label>\n\n            <button type=\"submit\" className={style.button}>\n                Add contact\n            </button>\n        </form>\n    );\n};\nContactForm.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    handelChange: PropTypes.func,\n    handelSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findContact } from 'redux/phonebook-actions';\nimport style from './Filter.module.css';\n\nconst Filter = () => {\n    const value = useSelector(state => state.contacts.filter);\n    const dispatch = useDispatch();\n\n    const handelChange = e => dispatch(findContact(e.target.value));\n\n    return (\n        <label className={style.label}>\n            Find contacts by name\n            <input\n                placeholder=\"Search contact\"\n                type=\"text\"\n                value={value}\n                onChange={handelChange}\n                className={style.input}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactById } from 'redux/phonebook-actions';\nimport style from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <li key={id} className={style.item}>\n            <span>{name}</span>:<span className={style.number}>{number}</span>\n            <button\n                type=\"button\"\n                onClick={() => dispatch(deleteContactById(id))}\n                className={style.button}\n            >\n                Delete\n            </button>\n        </li>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport style from './ContactList.module.css';\nimport { getContacts } from 'redux/selectors';\n\nconst ContactList = () => {\n    const getUserContacts = (items, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        const findContacts = items.filter(item =>\n            item.name.toLowerCase().includes(normalizedFilter),\n        );\n\n        if (findContacts.length === 0) {\n            alert(`No contact ${normalizedFilter.toUpperCase()}`);\n        }\n        return findContacts;\n    };\n\n    const { items, filter } = useSelector(getContacts);\n    const contacts = getUserContacts(items, filter);\n\n    return (\n        <ul className={style.list}>\n            {contacts.map(el => (\n                <ContactItem\n                    key={el.id}\n                    name={el.name}\n                    number={el.number}\n                    id={el.id}\n                />\n            ))}\n        </ul>\n    );\n};\n\nContactItem.porpTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={style.container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport style from './Heading.module.css';\n\nconst Heading = ({ title }) => (\n    <h2 className={style.title}>{title}</h2>\n);\n\nHeading.propTypes = { title: PropTypes.string.isRequired };\n\nexport default Heading;\n","import { notification } from './Notification.module.css';\r\n\r\nconst Notification = () => (\r\n    <p className={notification}>Enter your first contact</p>\r\n);\r\n\r\nexport default Notification;\r\n","import ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport Container from './Container';\nimport Heading from './Heading';\nimport Notification from './Notification';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/phonebook-actions';\nimport { getItems, loadingGet } from 'redux/selectors';\n\nconst App = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getItems);\n    const isLoading = useSelector(loadingGet);\n\n    useEffect(() => {\n        dispatch(getContacts());\n    }, [dispatch]);\n\n    return (\n        <Container>\n            {isLoading ? (\n                <h2>...Loading</h2>\n            ) : (\n                <>\n                    <Heading title={'Phonebook'} />\n                    <ContactForm />\n                    <Heading title={'Contacts'} />\n                    {contacts.length >= 2 && <Filter />}\n                    {contacts.length > 0 ? <ContactList /> : <Notification />}\n                </>\n            )}\n        </Container>\n    );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__lAASQ\",\"lable\":\"ContactForm_lable__1d_j8\",\"input\":\"ContactForm_input__3Cqgl\",\"button\":\"ContactForm_button__3E-1G\"};"],"sourceRoot":""}